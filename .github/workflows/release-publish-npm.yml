name: Release Vivid (NPM)

on:
  push:
    tags:
      - v*

jobs:
  build-publish:
    runs-on: ubuntu-latest
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CI_AT }}

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build components
        run: yarn compile

      - name: Build CDN icon resolver
        run: npx lerna run "generate-icon-resolver" --stream --scope="@vonage/vwc-icon" -- --verboseOutput --resolveStrategy=cdn --awsBucketName=vivid-icons-prod --awsBaseUrl=https://icons.resources.vonage.com --awsAccessKey=${{ secrets.AWS_VIVID_DEMO_PROD_ACCESS }} --awsAccessSecret=${{ secrets.AWS_VIVID_DEMO_PROD_SECRET }}

      - name: Publish components (NPM)
        run: |
          echo registry=https://registry.npmjs.org/ > .npmrc
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} >> .npmrc
          git update-index --skip-worktree .npmrc
          yarn lerna publish from-package --registry https://registry.npmjs.org --no-git-tag-version --no-push --yes
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
