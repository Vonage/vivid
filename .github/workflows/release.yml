name: Release

concurrency: ${{ github.workflow }}

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install dependencies
        env:
          yarn_always_auth: true,
          yarn__auth: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
          yarn_registry: "https://vonagecc.jfrog.io/vonagecc/api/npm/npm/"
        run: yarn install
      - run: yarn compile
      - run: tar -zcf /tmp/vivid-env.tar.gz .
      - uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: /tmp/vivid-env.tar.gz

  publish:
    needs: build
    runs-on: ubuntu-18.04
    name: Publishing to ${{ matrix.registry }}
    strategy:
      fail-fast: false
      matrix:
        registry:
          - github
          - npm
        include:
          - registry: github
            token_secret: GITHUB_TOKEN
            host: npm.pkg.github.com
          - registry: npm
            token_secret: NPM_AUTH_TOKEN
            host: registry.npmjs.org
    steps:
      - uses: actions/setup-node@v2
      - uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp
      - run: tar -zxf /tmp/vivid-env.tar.gz

      - name: Creating ".npmrc"
        run: printf "always-auth=true\nregistry=https://${{ matrix.host }}/\n//${{ matrix.host }}/:_authToken=${{ secrets[matrix.token_secret] }}" > .npmrc

      - name: Publishing packages
        run: yarn lerna publish from-package --registry=https://${{ matrix.host }} --no-git-reset --loglevel verbose --yes

      - name: Publishing "@vonage/vivid" package
        run: npm publish $(node ./scripts/vivid-all-package-generator)

  post_publish:
    name: Post publish
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_VIVID_DEMO_PROD_ACCESS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_VIVID_DEMO_PROD_SECRET }}
    needs: publish
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
      - uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp
      - run: tar -zxf /tmp/vivid-env.tar.gz

      # Notify community
      - name: Notify slack
        run: git log --format=oneline --decorate=short | node ./scripts/release_announcer --slackHookUrl="${{ secrets.SLACK_WEBHOOK }}"

      # Build and deploy showcase
      - name: Build storybook
        run: yarn storybook:build

      - name: Create deploy timestamp/version
        run: echo "STORYBOOK_DEPLOY_TIMESTAMP=$(jq -r '.timestamp' ./.storybook/static/build-details.json)" >> $GITHUB_ENV

      - name: Deploy showcase versioned as ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}
        run: aws s3 sync ./.out/ s3://${{ secrets.AWS_VIVID_DEMO_PROD_BUCKET }}/${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}

      - name: Update CloudFront distribution root object ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}
        run: aws cloudfront update-distribution --id ${{ secrets.AWS_VIVID_DEMO_PROD_DISTRIBUTION }} --default-root-object ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}/index.html

      - name: Invalidate CloudFront distribution root object's cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_VIVID_DEMO_PROD_DISTRIBUTION }} --paths "/"
