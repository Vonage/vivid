name: Compile & Test

on:
  pull_request:
    branches:
      - master

jobs:
  cache-yarn-and-build:
    runs-on: ubuntu-20.04
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build components
        run: yarn compile

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}

  test-safari:
    needs: cache-yarn-and-build
    runs-on: macos-latest
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}

      - name: Build components
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn compile

      - name: Test components
        run: yarn test:safari

      - name: Upload Safari coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: safari-coverage
          path: ./coverage/report-cobertura/coverage.xml

  test-firefox:
    needs: cache-yarn-and-build
    runs-on: ubuntu-20.04
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}

      - name: Build components
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn compile

      - name: Test components
        run: yarn test:firefox

      - name: Upload firefox coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: firefox-coverage
          path: ./coverage/report-cobertura/coverage.xml

  test-chrome:
    needs: cache-yarn-and-build
    runs-on: ubuntu-20.04
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}

      - name: Build components
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn compile

      - name: Test components
        run: yarn test:chrome

      - name: Upload chrome coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: chrome-coverage
          path: ./coverage/report-cobertura/coverage.xml

      - name: Upload chrome lcov coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: chrome-lcov-coverage
          path: ./coverage/report-lcov/lcov.info

  test-UI:
    needs: cache-yarn-and-build
    runs-on: macos-latest
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Install playwright deps
        run: yarn add playwright -D -W && yarn playwright install-deps

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}

      - name: Build components
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn compile

      - name: Test components
        run: yarn ui-tests

      - name: Upload snapshot and diff
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: snapshot
          path: ./ui-tests/*.png

  code-standards:
    needs: cache-yarn-and-build
    runs-on: ubuntu-20.04
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: vivid-cache-yarn-${{ hashFiles('**/package.json') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: |
            common
            components
          key: vivid-cache-build-${{ github.event.pull_request.head.sha }}

      - name: Build components
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn compile

      - name: Dependencies check
        run: yarn dep-check

      - name: Lint sources
        run: yarn lint

      - name: Ensure all autogenerated files committed
        run: yarn compile && sh ./scripts/ensure-all-committed.sh

  code-coverage:
      needs: test-chrome
      runs-on: ubuntu-20.04

      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup NodeJS 14
          uses: actions/setup-node@v2
          with:
            node-version: 14

        - name: Download artifact chrome-lcov-coverage
          uses: actions/download-artifact@v2
          with:
            name: chrome-lcov-coverage

        - name: Coveralls
          uses: coverallsapp/github-action@master
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            path-to-lcov: ./lcov.info
            flag-name: Unit


