name: Release Vivid (GitHub)

on:
  push:
    tags:
      - v*

jobs:
  build-publish:
    runs-on: ubuntu-latest
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_VIVID_DEMO_PROD_ACCESS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_VIVID_DEMO_PROD_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CI_AT }}

      - name: Setup NodeJS 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install

      # Build and publish
      - name: Build components
        run: yarn compile

      - name: Build CDN icon resolver
        run: yarn build:icon-resolver --resolveStrategy=cdn --awsAccessKey=${{ secrets.AWS_VIVID_DEMO_PROD_ACCESS }} --awsAccessSecret=${{ secrets.AWS_VIVID_DEMO_PROD_SECRET }} --awsBucketName=vivid-icons-prod --awsBaseUrl=https://d3fzvwfxu7izti.cloudfront.net

      - name: Publish components
        run: |
          echo registry=https://npm.pkg.github.com/ > .npmrc
          echo //npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN} >> .npmrc
          cat .npmrc
					git update-index --skip-worktree .npmrc
          yarn lerna publish from-package --registry https://npm.pkg.github.com --no-git-tag-version --no-push --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Notify community
      - name: Notify slack
        run: git log --format=oneline --decorate=short | node ./scripts/release_announcer --slackHookUrl="${{ secrets.SLACK_WEBHOOK }}"

      # Build and deploy showcase
      - name: Build storybook
        run: yarn storybook:build

      - name: Create deploy timestamp/version
        run: echo ::set-env name=STORYBOOK_DEPLOY_TIMESTAMP::$(jq -r '.timestamp' ./.storybook/static/build-details.json)

      - name: Deploy showcase versioned as ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}
        run: aws s3 sync ./.out/ s3://${{ secrets.AWS_VIVID_DEMO_PROD_BUCKET }}/${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}

      - name: Update CloudFront distribution root object ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}
        run: aws cloudfront update-distribution --id ${{ secrets.AWS_VIVID_DEMO_PROD_DISTRIBUTION }} --default-root-object ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}/index.html

      - name: Invalidate CloudFront distribution root object's cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_VIVID_DEMO_PROD_DISTRIBUTION }} --paths "/"