name: Build & Deploy Showcase (Dev)

on:
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  build-deploy-demo-dev:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    env:
      ARTIFACTORY_AUTH_TOKEN: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_B }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET_B }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Build storybook
        run: yarn storybook:build

      - name: Create deploy timestamp/version
        run: echo "STORYBOOK_DEPLOY_TIMESTAMP=$(jq -r '.timestamp' ./.storybook/static/build-details.json)" >> $GITHUB_ENV

      - name: Deploy showcase versioned as ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}
        run: aws s3 sync ./.out/ s3://${{ secrets.AWS_S3_BUCKET_B }}/${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}

      - name: Update CloudFront distribution root object ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}
        run: aws cloudfront update-distribution --id ${{ secrets.AWS_CF_DISTRIBUTION_ID_B }} --default-root-object ${{ env.STORYBOOK_DEPLOY_TIMESTAMP }}/index.html

      - name: Invalidate CloudFront distribution root object's cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID_B }} --paths "/"