name: Build & Deploy Showcase (Dev)

on:
  push:
    branches: [issue/cd-impr]
  pull_request:
    types: [closed]
    branches: [develop]

jobs:
  build-and-deploy-demo-dev:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          submodules: true

      - name: Setup NodeJS 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build storybook
        run: yarn storybook:build

      - name: Create deploy timestamp/version
        run: echo ::set-env name=STORYBOOK_DEPLOY_VERSION::$(jq -r '.timestamp' ./.storybook/static/build-details.json)

      - name: Deploy showcase versioned as ${{ env.STORYBOOK_DEPLOY_VERSION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_B }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET_B }}
        run: aws s3 sync ./.out/ s3://${{ secrets.AWS_S3_BUCKET_B }}/${{ env.STORYBOOK_DEPLOY_VERSION }}

      - name: Update CloudFront distribution to version ${{ env.STORYBOOK_DEPLOY_VERSION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_B }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET_B }}
          AWS_CF_DISTRIBUTION_ID: ${{ secrets.AWS_CF_DISTRIBUTION_ID_B }}
        run: sh ./scripts/update-cf-distribution-config.sh

      - name: Invalidate CloudFront cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_B }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET_B }}
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID_B }} --paths "/"