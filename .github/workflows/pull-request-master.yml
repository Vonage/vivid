name: Master Pull Request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - master

concurrency:
  group: ci-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ hashFiles('yarn.lock') }}
      - run: yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          yarn_always_auth: true
          yarn__auth: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
          yarn_registry: "https://vonagecc.jfrog.io/vonagecc/api/npm/npm/"
      - run: yarn lerna run build --stream --concurrency=15 --include-dependencies
      - run: tar -zcf /tmp/vivid-env.tar.gz .
      - uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: /tmp/vivid-env.tar.gz
  test:
    needs: build
    name: "Test Components on ${{ matrix.browser_name }}"
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 10
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
        browser:
          - SafariNative
          - ChromeHeadless
          - FirefoxHeadless
        exclude:
          - os: ubuntu-20.04
            browser: SafariNative
          - os: macos-latest
            browser: FirefoxHeadless
          - os: macos-latest
            browser: ChromeHeadless
        include:
          - browser: ChromeHeadless
            browser_name: Chrome
            report_coverage: true
          - browser: FirefoxHeadless
            browser_name: Firefox
            report_coverage: false
          - browser: SafariNative
            browser_name: Safari
            report_coverage: false
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp
      - run: tar -zxf /tmp/vivid-env.tar.gz
      - run: yarn karma start --coverage --browsers=${{ matrix.browser }}
      - uses: coverallsapp/github-action@master
        name: Report coverage information to coveralls
        if: ${{ matrix.report_coverage }}
        with:
          parallel: false
          github-token: ${{ github.token }}
          path-to-lcov: ./coverage/report-lcov/lcov.info
          flag-name: Tested on ${{ matrix.os }} / ${{ matrix.browser }}

  test_for_visual_regression:
    needs: build
    name: Test Components' Graphics
    runs-on: macos-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp
      - run: tar -zxf /tmp/vivid-env.tar.gz
      - run: npm rebuild playwright && yarn playwright install-deps
        env:
          yarn_always_auth: true
          yarn__auth: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
          yarn_registry: "https://vonagecc.jfrog.io/vonagecc/api/npm/npm/"
      - run: yarn ui-tests
      - uses: actions/upload-artifact@v2
        with:
          name: snapshot
          path: ./ui-tests/*.png

  test_static:
    needs: build
    name: ${{ matrix.script_name }}
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 10
      matrix:
        script:
          - dep-check
          - lint
        include:
          - script: dep-check
            script_name: Test package dependencies
          - script: lint
            script_name: Test Lint rules
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp
      - run: tar -zxf /tmp/vivid-env.tar.gz
      - run: yarn ${{ matrix.script }}

  deploy_storybook:
    needs: build
    name: Deploy Storybook
    runs-on: ubuntu-20.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_VIVID_DEMO_PRS_ACCESS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_VIVID_DEMO_PRS_SECRET }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp
      - run: tar -zxf /tmp/vivid-env.tar.gz
      - name: Build storybook
        run: yarn storybook:build base-url=${{ github.event.number }}
      - name: Deploy showcase under PR ID (${{ github.event.number }})
        run: aws s3 sync ./.out/ s3://${{ secrets.AWS_VIVID_DEMO_PRS_BUCKET }}/${{ github.event.number }}
      - name: Invalidate CloudFront distribution root object's cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_VIVID_DEMO_PRS_DISTRIBUTION }} --paths "/${{ github.event.number }}/*"
      - if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' }}
        env:
          URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST $URL -H "Content-Type: application/json" -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": ":rocket:\n\nLatest __successful__ build of the PR deployed [here](https://${{ secrets.TMP_PR_DEPLOYMENT_BASE_URL }}/${{ github.event.number }}/index.html).\n\n:rocket:" }'
