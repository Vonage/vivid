@use 'sass:math';
@use 'sass:map';
@use 'scale' as *;
@use '@vonage/vvd-foundation/scss/variable-names/font-variable-names' as font-var-names;
@import 'modularscale-sass/stylesheets/modularscale';

// THESE CAN BE GENERATED BY DESIGN TOKENS

$font-families: (
  'primary': 'var(#{font-var-names.$font-family-css-variable-name})',
);
$font-weights: (
  'normal': 400,
  'medium': 500,
  'semibold': 600,
);
$font-stretches: (
  'normal': 50%,
  'extra-expanded': 75%,
);

@function toFixed($number, $digits: 0) {
	$mul: math.pow(10, $digits);
	@return math.round($number * $mul) / $mul;
}

// NOTICE LINE-HEIGHT IS HARDCODED
// But I belive we can "algorithmatize"
// it by this practice here
// https://www.smashingmagazine.com/2020/07/css-techniques-legibility/#optimal-line-height
$typography-category-list-base: (
  'headline': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'medium'),
    font-stretch: map.get($font-stretches, 'extra-expanded'),
    font-size: toFixed(ms(9, $thread: 1200px), 3),
    line-height: calc(1ex / 0.47),
    letter-spacing: initial,
    text-transform: none,
  ),
  'title': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'medium'),
    font-stretch: map.get($font-stretches, 'extra-expanded'),
    font-size: toFixed(ms(7, $thread: 1200px), 3),
    line-height: calc(1ex / 0.42),
    letter-spacing: initial,
    text-transform: none,
  ),
  'subheading-2': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'medium'),
    font-stretch: map.get($font-stretches, 'extra-expanded'),
    font-size: toFixed(ms(6, $thread: 1200px), 3),
    line-height: calc(1ex / 0.38),
    letter-spacing: initial,
    text-transform: none,
  ),
  'subheading-1': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'medium'),
    font-stretch: map.get($font-stretches, 'extra-expanded'),
    font-size: toFixed(ms(5, $thread: 1200px), 3),
    line-height: calc(1ex / 0.37),
    letter-spacing: initial,
    text-transform: none,
  ),
  'body-1': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'normal'),
    font-stretch: map.get($font-stretches, 'normal'),
    font-size: toFixed(ms(0, $thread: 1200px), 3),
    line-height: calc(1ex / 0.32),
    letter-spacing: initial,
    text-transform: none,
  ),
  'body-2': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'normal'),
    font-stretch: map.get($font-stretches, 'normal'),
    font-size: toFixed(ms(-1, $thread: 1200px), 3),
    line-height: calc(1ex / 0.32),
    letter-spacing: initial,
    text-transform: none,
  ),
  'caption': (
    font-family: map.get($font-families, 'primary'),
    font-weight: map.get($font-weights, 'normal'),
    font-stretch: map.get($font-stretches, 'normal'),
    font-size: toFixed(ms(-2, $thread: 1200px), 3),
    line-height: calc(1ex / 0.32),
    letter-spacing: initial,
    text-transform: none,
  ),
);

// Merge with bold categories by extending
// specific members and overriding their weight
$typography-category-list: map.merge(
  $typography-category-list-base,
  (
    'body-1-bold':
      map.merge(
        map.get($typography-category-list-base, 'body-1'),
        (
          font-weight: map.get($font-weights, 'semibold'),
        )
      ),
    'body-2-bold':
      map.merge(
        map.get($typography-category-list-base, 'body-2'),
        (
          font-weight: map.get($font-weights, 'semibold'),
        )
      ),
    'button':
      map.merge(
        map.get($typography-category-list-base, 'body-2'),
        (
          font-weight: map.get($font-weights, 'semibold'),
          line-height: 1,
        )
      ),
    'caption-bold':
      map.merge(
        map.get($typography-category-list-base, 'caption'),
        (
          font-weight: map.get($font-weights, 'semibold'),
        )
      ),
  )
);
