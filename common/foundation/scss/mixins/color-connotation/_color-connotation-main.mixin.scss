@use 'sass:selector';
@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables';
@use '../../functions';
@use 'predefined-connotations';
@use 'variables';

$_connotations-definition: (
	primary: 'primary',
	cta: 'cta',
	success: 'success',
	alert: 'alert',
	warning: 'warning',
	info: 'info',
	announcement: 'announcement',
);

// override to apply relevance
$connotations-set: predefined-connotations.$connotations-set !default;
$selector: variables.$selector !default;

$connotation-variable: #{variables.$vvd-color-connotation} !default;
$on-connotation-variable: #{variables.$vvd-on-color-connotation} !default;

// selector can be altered by relevance
@mixin connotations-main {
	@each $name in functions.pick-list($connotations-set, $_connotations-definition) {
		$compound: '[connotation="#{$name}" i]';

		#{functions.get-local-selector($selector, variables.$compound-placeholder, $compound)} {
			@include connotation-main-variables($name);
		}
	}
}

@mixin connotations-main-default($name) {
	$compound: ':not([connotation])';

	#{functions.get-local-selector($selector, variables.$compound-placeholder, $compound)} {
		@include connotation-main-variables($name);
	}
}

@mixin connotation-main-variables($name) {
	#{$connotation-variable}: var(--vvd-color-#{$name});
	#{$on-connotation-variable}: var(--vvd-color-on-#{$name});
}
