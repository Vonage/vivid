@use 'sass:selector';
@use 'sass:map';
@use '../../functions';
@use 'predefined-connotations';
@use 'variables';


$_connotations-definition: (
	primary: (contrast: neutral-90, soft: neutral-20, accent: neutral-30),
	cta: (contrast: cta-90, soft: cta-20, accent: cta-60),
	success: (contrast: neutral-90, soft: success-20, accent: success-60),
	alert: (contrast: neutral-90, soft: alert-20, accent: alert-60),
	warning: (contrast: neutral-90, soft: warning-20, accent: warning-60),
	info: (contrast: neutral-90, soft: info-20, accent: info-60),
	announcement: (contrast: neutral-90, soft: announcement-20, accent: announcement-60)
);

// override to apply relevance
$connotations-set: predefined-connotations.$connotations-set !default;
$selector: variables.$selector !default;  //$selector: ':host([compound])' !default; //$compound-placeholder: '[compound]';

$connotation-variable: #{variables.$vvd-color-connotation} !default;

@mixin connotations-shades {
	@each $c_name, $value in functions.pick-map($connotations-set, $_connotations-definition) {
		$compound: '[connotation="#{$c_name}" i]';

		$local-selector: selector.replace(
			#{$selector},
			#{variables.$compound-placeholder},
			#{$compound}
		);

		#{$local-selector} {
			@each $s_name, $s_value in $value {
				#{$connotation-variable}-#{$s_name}: var(--vvd-color-#{$s_value});
			}
		}
	}
}
//
@mixin connotations-shades-default($name) {
	:host {
		@each $s_name, $s_value in map.get($_connotations-definition, $name) {
			#{$connotation-variable}-#{$s_name}: var(--vvd-color-#{$s_value});
		}
	}
}


