@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables';
@use '../variable-names/color-semantic-variable-names' as color-semantic;
@use '../functions';

// override to apply relevance
$layouts: filled outlined soft text ghost !default;

$variable-name-prefix: '--' !default;
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
$all-layouts: (
	filled: 'filled',
	outlined: 'outlined',
	soft: 'soft',
	text: 'text',
	ghost: 'ghost',
);

$bg: var(#{color-semantic.$vvd-color-connotation});

%filled {
	#{$variable-name-prefix}background-color: #{$bg};
	#{$variable-name-prefix}color: var(#{color-semantic.$vvd-color-on-connotation});
}

%outlined {
	#{$variable-name-prefix}background-color: transparent;
	#{$variable-name-prefix}border: 1px solid #{$bg};
	#{$variable-name-prefix}color: #{$bg};
}

%soft {
	#{$variable-name-prefix}background-color: #{$bg};
	#{$variable-name-prefix}color: var(#{scheme-variables.$vvd-color-on-base});
	#{$variable-name-prefix}opaque: 20;
}

%text,
%ghost {
	#{$variable-name-prefix}background-color: transparent;
	#{$variable-name-prefix}color: var(#{scheme-variables.$vvd-color-on-base});
}

@mixin layout() {
	@each $layout in functions.pick-list($layouts, $all-layouts) {
		#{':host([layout="#{$layout}"])'} {
			@extend %#{$layout};
		}
	}
}
