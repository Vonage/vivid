@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables' as scheme-variables;
@use '../connotation' as connotation;
@use '../../functions' as functions;
@use 'variables' as variables;
@use 'config' as config;
@use 'sass:selector';


////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
$all-layouts: (
	filled: 'filled',
	outlined: 'outlined',
	soft: 'soft',
	text: 'text',
	ghost: 'ghost',
);

%filled {
	#{variables.$vvd-layout--fill}: var(#{connotation.$vvd-color-connotation});
	#{variables.$vvd-layout--text}: var(#{connotation.$vvd-color-on-connotation});
}

%outlined {
	#{variables.$vvd-layout--fill}: transparent;
	#{variables.$vvd-layout--outline}: 1px solid var(#{connotation.$vvd-color-connotation});
	#{variables.$vvd-layout--text}: var(#{connotation.$vvd-color-connotation});
}

%soft {
	#{variables.$vvd-layout--fill}: var(#{connotation.$vvd-color-connotation}-soft);
	#{variables.$vvd-layout--text}: var(#{scheme-variables.$vvd-color-on-canvas});
}

%text,
%ghost {
	#{variables.$vvd-layout--fill}: transparent;
	#{variables.$vvd-layout--text}: var(#{connotation.$vvd-color-connotation});
}

@mixin layout {
	$set: functions.pick-list(config.$layout-set, config.$predefined-layout-set);

	@each $type in $set {
		$compound: '[layout="#{$type}" i]';
		$local-selector: functions.get-local-selector(variables.$selector, variables.$compound-placeholder, $compound);

		@if $type == config.$default {
			$default-compound-selector: functions.get-attribute-rule-out-compound-selector(layout, config.$default, $set);
			$default-selector: functions.get-local-selector(variables.$selector, variables.$compound-placeholder, $default-compound-selector);
			$local-selector: selector.parse(#{$local-selector, $default-selector});
		}

		// if mixin included within a selector context append that selector as well
		@if & {
			$local-selector: selector.nest($local-selector, &);
		}

		@at-root #{$local-selector} {
			@extend %#{$type};
		}
	}
}
