@forward './vwc-textfield-coupling';
@forward './vwc-textfield-input';
@use './vwc-textfield-variables' as textfield-variables;
@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables';
@use '@vonage/vvd-foundation/scss/variable-names/color-semantic-variable-names' as color-semantic;
@use '@vonage/vvd-foundation/scss/mixins/shape-mixins' as shape-mixins;

:host {
	--mdc-theme-error: #{color-semantic.$formfield-label-error-ink};
	--mdc-text-field-fill-color: var(#{scheme-variables.$vvd-color-base});
	--mdc-text-field-ink-color: var(#{scheme-variables.$vvd-color-on-base});
	--mdc-text-field-label-ink-color: var(
		#{color-semantic.$formfield-label-idle-ink}
	);
	--mdc-text-field-disabled-ink-color: var(
		#{color-semantic.$formfield-disabled-ink}
	);
	--mdc-text-field-disabled-fill-color: var(
		#{color-semantic.$formfield-disabled-fill}
	);
	--mdc-text-field-outlined-idle-border-color: var(
		#{color-semantic.$formfield-border-idle}
	);
	--mdc-text-field-outlined-hover-border-color: var(
		#{color-semantic.$formfield-border-hover}
	);
	--mdc-text-field-outlined-disabled-border-color: var(
		#{color-semantic.$formfield-border-disabled}
	);
	--mdc-text-field-error-color: var(
		#{color-semantic.$formfield-label-error-ink}
	);
	--mdc-text-field-error-fill-color: var(
		#{color-semantic.$formfield-error-fill}
	);
	--mdc-shape-small: var(--border-radius);

	min-width: 180px;

	font-stretch: var(
		--mdc-typography-subtitle1-font-stretch
	); // ! this was supposed to be set by MDC
}

:host([readonly]),
:host([disabled]) {
	vwc-notched-outline {
		--mdc-notched-outline-border-color: var(
			--mdc-text-field-outlined-disabled-border-color
		);
	}

	.mdc-text-field {
		background-color: var(--mdc-text-field-disabled-fill-color);
	}
}

:host(:not([disabled])) {
	.mdc-text-field.mdc-text-field--focused {
		vwc-notched-outline {
			--mdc-notched-outline-border-color: var(
				--mdc-text-field-outlined-hover-border-color
			);
		}

		&:not(.mdc-text-field--invalid) .mdc-floating-label {
			color: var(--mdc-text-field-label-ink-color);
		}
	}
}

:host([dense]) {
	#{textfield-variables.$vvd-text-field-size-block}: 40px;
}

:host(:not([dense])) {
	#{textfield-variables.$vvd-text-field-size-block}: 48px;
}

:host([dense][label]:not([label=''])) {
	padding-top: 24px;

	.mdc-text-field {
		.mdc-floating-label {
			top: -25px;
			left: -12px;
			transform: none;
		}

		.mdc-floating-label,
		&--invalid.mdc-text-field--outlined .mdc-floating-label,
		&:not(.mdc-text-field--invalid):not(.mdc-text-field--focused)
			.mdc-floating-label,
		&:not(.mdc-text-field--invalid).mdc-text-field--focused .mdc-floating-label {
			color: var(--mdc-text-field-ink-color);
		}
	}
}

.mdc-text-field {
	height: var(#{textfield-variables.$vvd-text-field-size-block});
	border-bottom-left-radius: var(--mdc-shape-small);
	// prevent fill overflowing bottom corners
	border-bottom-right-radius: var(--mdc-shape-small);

	.mdc-floating-label {
		left: 14px;
		font-stretch: var(
			--mdc-typography-subtitle1-font-stretch
		); // ! this was supposed to be set by MDC
		line-height: var(--mdc-typography-subtitle1-line-height);
		transition-property: transform, font-size;
	}

	.mdc-floating-label--float-above {
		font-size: var(--mdc-typography-subtitle1-font-size);
		transform: translateY(-18px);

		&.mdc-floating-label--shake {
			animation: none;
		}
	}

	&--outlined {
		background-color: var(--mdc-text-field-fill-color);

		.mdc-floating-label {
			left: 4px;
		}
	}

	&--invalid {
		&.mdc-text-field--outlined {
			background-color: var(--mdc-text-field-error-fill-color);
			vwc-notched-outline {
				--mdc-notched-outline-border-color: var(--mdc-text-field-error-color);
			}

			.mdc-floating-label {
				color: var(--mdc-text-field-error-color);
			}
		}
	}

	&:not(.mdc-text-field--disabled) {
		.mdc-text-field__icon--leading {
			color: var(--mdc-text-field-label-ink-color);
		}
	}

	:host(:hover) &,
	&:hover,
	&--focused {
		--vvd-outline-color: var(--mdc-text-field-outlined-hover-border-color);

		&.mdc-text-field--invalid {
			--vvd-outline-color: var(--mdc-text-field-error-color);
		}
	}

	&--invalid {
		--vvd-outline-color: var(--mdc-text-field-error-color);

		.mdc-text-field__icon--trailing {
			color: var(--mdc-text-field-label-ink-color);
		}
	}

	&--disabled {
		.mdc-text-field__icon--leading,
		.mdc-text-field__icon--trailing {
			color: var(--mdc-text-field-disabled-ink-color);
		}
	}

	vwc-icon {
		--icon-size: #{textfield-variables.$icon-size};
		align-self: center;
		padding: 0;
		margin: 0 #{textfield-variables.$horizontal-gutter};
	}
}

vwc-notched-outline {
	--mdc-notched-outline-border-color: var(
		--mdc-text-field-outlined-idle-border-color
	);
}

:host(:not([disabled]):hover)
	:not(.mdc-text-field--invalid):not(.mdc-text-field--focused)
	vwc-notched-outline {
	--mdc-notched-outline-border-color: var(
		--mdc-text-field-outlined-hover-border-color
	);
}

@include shape-mixins.shape(
	$shapes: (
		rounded: 6px,
		pill: 24px,
	)
);

.mdc-text-field--with-leading-icon.mdc-text-field--outlined
	.mdc-floating-label--float-above {
	transform: translateY(-18px);
}
.mdc-text-field--with-leading-icon.mdc-text-field--outlined
	.mdc-floating-label {
	left: 40px;
}

:host([outlined]) {
	--padding-inline-start: max(
		#{textfield-variables.$horizontal-gutter},
		calc(var(--mdc-shape-small, 4px) + 4px)
	);
	--padding-inline-end: max(
		#{textfield-variables.$horizontal-gutter},
		var(--mdc-shape-small, 4px)
	);
}

:host(:not([disabled])[icon]) {
	--padding-inline-start: #{textfield-variables.$icon-gutter};
}

:host(:not([disabled])[icontrailing]) {
	--padding-inline-end: #{textfield-variables.$icon-gutter};
}
