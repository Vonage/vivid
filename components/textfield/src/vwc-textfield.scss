@use 'sass:map';
@forward './vwc-textfield-coupling';
@forward './vwc-textfield-input';
@forward './vwc-textfield-action';
@use './vwc-textfield-variables' as textfield-variables;
@use '@vonage/vvd-typography/scss/typography' as typography;
@use '@vonage/vwc-icon/src/partials/vwc-icon-variables' as icon-variables;
@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables' as scheme-variables;
@use '@vonage/vvd-style-coupling/scss/vvd-formfield' as vvd-formfield;
@use '@vonage/vvd-foundation/scss/mixins/shape-mixins' as shape-mixins with (
	$variable-name: textfield-variables.$vvd-textfield-shape
);

:host {
	--mdc-shape-small: var(#{textfield-variables.$vvd-textfield-shape});
	--mdc-theme-error: #{vvd-formfield.$formfield-label-error-ink};
	--mdc-text-field-fill-color: var(#{scheme-variables.$vvd-color-canvas});
	--mdc-text-field-ink-color: var(#{scheme-variables.$vvd-color-on-canvas});
	--mdc-text-field-label-ink-color: var(#{vvd-formfield.$formfield-label-idle-ink});
	--mdc-text-field-disabled-ink-color: var(
		#{vvd-formfield.$formfield-disabled-ink}
	);
	--mdc-text-field-disabled-fill-color: var(
		#{vvd-formfield.$formfield-disabled-fill}
	);
	--mdc-text-field-outlined-idle-border-color: var(
		#{vvd-formfield.$formfield-border-idle}
	);
	--mdc-text-field-outlined-hover-border-color: var(
		#{vvd-formfield.$formfield-border-hover}
	);
	--mdc-text-field-outlined-disabled-border-color: var(
		#{vvd-formfield.$formfield-border-disabled}
	);
	--mdc-text-field-error-color: var(
		#{vvd-formfield.$formfield-label-error-ink}
	);
	--mdc-text-field-error-fill-color: var(
		#{vvd-formfield.$formfield-error-fill}
	);

	@include vvd-formfield.coupling;

	min-width: 180px;

	font-stretch: var(
		--mdc-typography-subtitle1-font-stretch
	); // ! this was supposed to be set by MDC

	.mdc-text-field__input {
		pointer-events: none;
	}
}

:host([readonly]),
:host([disabled]) {
	vwc-notched-outline {
		--mdc-notched-outline-border-color: var(
			--mdc-text-field-outlined-disabled-border-color
		);
	}

	.mdc-text-field {
		background-color: var(--mdc-text-field-disabled-fill-color);
	}
}

:host(:not([disabled])) {
	.mdc-text-field.mdc-text-field--focused {
		vwc-notched-outline {
			--mdc-notched-outline-border-color: var(
				--mdc-text-field-outlined-hover-border-color
			);
		}

		&:not(.mdc-text-field--invalid) .mdc-floating-label {
			color: var(--mdc-text-field-label-ink-color);
		}
	}
}

:host([dense]) {
	#{textfield-variables.$vvd-textfield-size-block}: 40px;
}

:host(:not([dense])) {
	#{textfield-variables.$vvd-textfield-size-block}: 48px;
}

:host([dense][label]:not([label=''])) {
	.mdc-text-field {
		.mdc-floating-label {
			top: -25px;
			left: -12px;
			transform: none;
		}

		.mdc-floating-label,
		&--invalid.mdc-text-field--outlined .mdc-floating-label,
		&:not(.mdc-text-field--invalid):not(.mdc-text-field--focused)
		.mdc-floating-label,
		&:not(.mdc-text-field--invalid).mdc-text-field--focused
		.mdc-floating-label {
			color: var(--mdc-text-field-ink-color);
		}
	}

	@at-root :host([charcounter]), // also if charcounter is present. temporary fix
	& {
		padding-top: 24px;
	}
}

.mdc-text-field {
	height: var(#{textfield-variables.$vvd-textfield-size-block});
	border-bottom-left-radius: var(#{textfield-variables.$vvd-textfield-shape});
	// prevent fill overflowing bottom corners
	border-bottom-right-radius: var(#{textfield-variables.$vvd-textfield-shape});
	.mdc-floating-label {
		left: 14px;
		font-stretch: var(
			--mdc-typography-subtitle1-font-stretch
		); // ! this was supposed to be set by MDC
		line-height: var(--mdc-typography-subtitle1-line-height);
		transition-property: transform, font-size;
	}

	.mdc-floating-label--float-above {
		font-size: var(--mdc-typography-subtitle1-font-size);
		transform: translateY(-18px);

		&.mdc-floating-label--shake {
			animation: none;
		}
	}

	&--outlined {
		padding-left: max(16px, var(--mdc-shape-small, 4px));
		background-color: var(--mdc-text-field-fill-color);

		.mdc-floating-label {
			left: 4px;
		}
		&.vvd-text-field--with-action {
			&,
			&.mdc-text-field--with-trailing-icon {
				padding-inline-end: textfield-variables.$actions-gap;
			}
		}
	}

	&--invalid {
		--vvd-outline-color: var(--mdc-text-field-error-color);

		&.mdc-text-field--outlined {
			background-color: var(--mdc-text-field-error-fill-color);
			vwc-notched-outline {
				--mdc-notched-outline-border-color: var(--mdc-text-field-error-color);
			}

			.mdc-floating-label {
				color: var(--mdc-text-field-error-color);
			}
		}

		.mdc-text-field__icon--trailing {
			color: var(--mdc-text-field-label-ink-color);
		}
	}

	&:not(.mdc-text-field--disabled) {
		.mdc-text-field__icon--leading,
		.mdc-text-field__icon--trailing {
			color: var(--mdc-text-field-label-ink-color);
		}
	}

	:host(:hover) &,
	&:hover,
	&--focused {
		--vvd-outline-color: var(--mdc-text-field-outlined-hover-border-color);

		&.mdc-text-field--invalid {
			--vvd-outline-color: var(--mdc-text-field-error-color);
		}
	}

	&--disabled {
		.mdc-text-field__icon--leading,
		.mdc-text-field__icon--trailing {
			color: var(--mdc-text-field-disabled-ink-color);
		}
	}

	.mdc-text-field__icon--leading,
	.mdc-text-field__icon--trailing {
		display: flex;
		align-self: center;
		padding: 0;
		margin: 0 #{textfield-variables.$horizontal-gutter};

		vwc-icon {
			#{icon-variables.$icon-size-variable-name}: var(#{textfield-variables.$vvd-textfield-action-icon-size-variable-name},
			#{map.get(textfield-variables.$icon-sizes, 'medium')});
		}
	}
}

vwc-notched-outline {
	--mdc-notched-outline-border-color: var(
		--mdc-text-field-outlined-idle-border-color
	);
}

:host(:not([disabled]):hover)
:not(.mdc-text-field--invalid):not(.mdc-text-field--focused)
vwc-notched-outline {
	--mdc-notched-outline-border-color: var(
		--mdc-text-field-outlined-hover-border-color
	);
}

@include shape-mixins.shape(
	$shapes: (
		rounded: 6px,
		pill: 24px,
	)
);

.mdc-text-field--with-leading-icon.mdc-text-field--outlined
.mdc-floating-label--float-above {
	font-size: var(--mdc-typography-subtitle1-font-size);
	transform: translateY(-18px);
}
.mdc-text-field--with-leading-icon.mdc-text-field--outlined
.mdc-floating-label {
	left: 40px;
}

.mdc-text-field-character-counter {
	@include typography.typography-cat-shorthand('body-2');
	position: absolute;
	top: -25px;
	right: 0;
	color: var(#{scheme-variables.$vvd-color-neutral-70}) !important;
}

:host([appearance='ghost'i]) {
	vwc-notched-outline {
		--mdc-notched-outline-stroke-width: 0;
	}
}
