@use 'sass:list';
@use 'sass:selector';
@use 'sass:map';

$vvd-button-group-shape: --vvd-button-group-shape;
$scopes: button icon-button;
$buttons-type-selectors: selector.append('vwc-', list.join($scopes, '', $separator: comma));

@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables' as scheme-variables;
@use '@vonage/vvd-foundation/scss/mixins/shape-mixins' as shape-mixins with (
	$variable-name: #{$vvd-button-group-shape}
);

@include shape-mixins.shape(
	$shapes: (
		rounded: 6px,
		pill: 24px,
	)
);

$sizes: (
	'normal': 40px,
	'enlarged': 48px,
	'dense': 32px,
);

:host {
	display: inline-flex;
}

:host([raised]) {
	border-radius: var(#{$vvd-button-group-shape});
	box-shadow: 0px 4px 2px rgba(19, 20, 21, 0.05), 0px 2px 4px rgba(19, 20, 21, 0.05), 0px 2px 8px rgba(19, 20, 21, 0.1);
}
// TODO::remove these when viv-485 is complete

::slotted(#{vwc-button}) {
	--mdc-theme-primary: var(#{scheme-variables.$vvd-color-base});
	--mdc-theme-on-primary: var(#{scheme-variables.$vvd-color-on-base});
	--mdc-ripple-color: var(#{scheme-variables.$vvd-color-on-base});
	--mdc-ripple-focus-opacity: 0;
}

::slotted(#{vwc-button}[selected]) {
	--mdc-theme-primary: var(#{scheme-variables.$vvd-color-neutral-30});
}

::slotted(#{vwc-button}:hover:not([selected])) {
	--mdc-theme-primary: var(#{scheme-variables.$vvd-color-neutral-20});
}

:host([disabled]) ::slotted(#{vwc-button}),
:host([disabled]) ::slotted(#{vwc-button}[selected]) {
	--mdc-theme-on-primary: var(#{scheme-variables.$vvd-color-neutral-20});
	pointer-events: none;
}

// End of viv-485 removal

@each $scope in $scopes {
	::slotted(vwc-#{$scope}) {
		--vvd-#{$scope}-background-color: var(#{scheme-variables.$vvd-color-neutral-30});
		--vvd-#{$scope}-color: var(#{scheme-variables.$vvd-color-on-base});
		--vvd-#{$scope}-shape: var(#{$vvd-button-group-shape});
	}

	::slotted(vwc-#{$scope}[selected]) {
		--vvd-#{$scope}-background-color: var(#{scheme-variables.$vvd-color-neutral-50});
	}

	::slotted(vwc-#{$scope}:hover:not([selected])) {
		--vvd-#{$scope}-background-color: var(#{scheme-variables.$vvd-color-neutral-40});
	}

	::slotted(vwc-#{$scope}:not(:first-child):not(:last-child)) {
		--vvd-#{$scope}-shape: 0;
	}

	::slotted(vwc-#{$scope}:first-child:not(:last-child)) {
		padding-left: var(--vwc-#{$scope}-vertical-padding, 0);
		border-radius: var(#{$vvd-button-group-shape}) 0 0 var(#{$vvd-button-group-shape});

		:host & {
			--vvd-#{$scope}-shape: var(#{$vvd-button-group-shape}) 0 0 var(#{$vvd-button-group-shape});
		}
	}

	::slotted(vwc-#{$scope}:last-child:not(:first-child)) {
		padding-right: var(--vwc-#{$scope}-vertical-padding, 0);
		border-radius: 0 var(#{$vvd-button-group-shape}) var(#{$vvd-button-group-shape}) 0;

		:host(:not([accent])) & {
			--vvd-#{$scope}-shape: 0 var(#{$vvd-button-group-shape}) var(#{$vvd-button-group-shape}) 0;
		}
	}

	:host([disabled]) ::slotted(vwc-#{$scope}), :host([disabled][accent]) ::slotted(vwc-#{$scope}[selected]) {
		--vvd-#{$scope}-background-color: var(#{scheme-variables.$vvd-color-neutral-30});
		--vvd-#{$scope}-color: var(#{scheme-variables.$vvd-color-neutral-50});
		pointer-events: none;
	}
}
