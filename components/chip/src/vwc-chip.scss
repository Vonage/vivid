@use 'partials/vwc-chip-variables' as chip-variables;
@use '@vonage/vwc-icon/src/partials/vwc-icon-variables' as icon-variables;
@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables' as scheme-variables;
@use '@vonage/vvd-typography/scss/typography' as typography;
@use '@vonage/vvd-foundation/scss/mixins/color-connotation' as color-connotation with (
	$connotations-set: primary cta
);

@use '@vonage/vvd-foundation/scss/mixins/shape-mixins' as shape-mixins with (
	$variable-name: #{chip-variables.$namespace-shape}
);
@use '@vonage/vvd-foundation/scss/mixins/layout-mixins' as layout-mixins with (
	$layouts: outlined soft,
	$variable-prefix: #{chip-variables.$namespace-layout}
);


@include color-connotation.connotations-shades;
@include color-connotation.connotations-shades-default(primary);
@include color-connotation.connotations-main;
@include color-connotation.connotations-main-default(primary);

@include shape-mixins.shape(
	$shapes: (
		rounded: 4px,
		pill: 14px,
	),
	$default: pill
);

@include layout-mixins.layout();
@include layout-mixins.layout-default(soft);


.vwc-chip {
	z-index: 0;
	display: inline-flex;
	align-items: center;
	padding: 0 var(#{chip-variables.$namespace-padding-inline});
	border: var(#{chip-variables.$namespace-layout}--outline);
	background-color: var(#{scheme-variables.$vvd-color-neutral-20});
	block-size: var(#{chip-variables.$namespace-block-size});
	border-radius: var(#{chip-variables.$namespace-shape});
	color: var(#{chip-variables.$namespace-layout}--text);

	&:not(.vwc-chip--selected) {
		#{chip-variables.$namespace-layout}--text: var(#{scheme-variables.$vvd-color-neutral-90});

		// :host(:not([layout])) &,
		// :host([layout="soft"i]) & {
		// 	#{chip-variables.$namespace-layout}--fill: var(#{scheme-variables.$vvd-color-neutral-20});
		// }
	}

	:host([layout="outlined"i]) & {
		#{chip-variables.$namespace-layout}--outline: 1px solid var(#{scheme-variables.$vvd-color-neutral-50});
	}



	:host(:not([dense]):not([enlarged])) & {
		@include typography.typography-cat-shorthand('body-2-bold');
		#{chip-variables.$namespace-padding-inline}: 10px;
		#{chip-variables.$namespace-icon-checkmark--padding-inline-end}: 6px;
		#{chip-variables.$namespace-block-size}: 24px;
		#{chip-variables.$namespace-icon-checkmark--size}: 16px;
	}
	
	:host([dense]) & {
		@include typography.typography-cat-shorthand('caption-bold');
		#{chip-variables.$namespace-padding-inline}: 8px;
		#{chip-variables.$namespace-icon-checkmark--padding-inline-end}: 4px;
		#{chip-variables.$namespace-block-size}: 20px;
		#{chip-variables.$namespace-icon-checkmark--size}: 12px;
	}
	
	:host([enlarged]) & {
		@include typography.typography-cat-shorthand('body-1-bold');
		#{chip-variables.$namespace-padding-inline}: 12px;
		#{chip-variables.$namespace-icon-checkmark--padding-inline-end}: 8px;
		#{chip-variables.$namespace-block-size}: 28px;
		#{chip-variables.$namespace-icon-checkmark--size}: 20px;
	}
}

.vwc-chip-button {
	position: relative;
	cursor: pointer;
	@supports (contain: content) {
		contain: content;
	}
	@supports not (contain: content) {
		overflow: hidden;
	}

	.ripple {
		--mdc-ripple-color: currentColor;
	}

	&.vwc-chip--selected {
		.ripple {
			// --mdc-ripple-activated-opacity: 1;
			@at-root :host([connotation='cta'i]) & {
				--mdc-ripple-color: var(#{chip-variables.$namespace-layout}--fill);
			}
			@at-root :host(:not([connotation='cta'i])) & {
				--mdc-ripple-color: var(#{scheme-variables.$vvd-color-neutral-40});
			}
		}
	}
}

.vwc-chip__checkmark {
	block-size: var(#{chip-variables.$namespace-icon-checkmark--size});
	margin-inline-end: 0;
	margin-inline-start: 0;
	@media (prefers-reduced-motion: no-preference) {
		transition-duration: 0.2s;
		transition-property: margin-inline-start, margin-inline-end;
	}
	.vwc-chip.vwc-chip--selected & {
		margin-inline-end: var(#{chip-variables.$namespace-icon-checkmark--padding-inline-end});
		margin-inline-start: calc(4px - var(#{chip-variables.$namespace-padding-inline}));
	}
	
	> .vwc-chip__icon {
		display: block;
		block-size: var(#{chip-variables.$namespace-icon-checkmark--size});
		inline-size: var(#{chip-variables.$namespace-icon-checkmark--size});
		line-height: unset;
		@media (prefers-reduced-motion: no-preference) {
			transition: inline-size 0.2s;
		}

		.vwc-chip:not(.vwc-chip--selected) & {
			inline-size: 0;
		}
	}
}

// disable connotation if not selected
// .vwc-chip:not(.vwc-chip--selected) {
// 	:host([connotation="cta"i]) & {
// 		--vvd-color-connotation: unset;
// 		--vvd-color-on-connotation: unset;
// 	}
// }

