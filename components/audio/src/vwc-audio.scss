@use '@vonage/vvd-design-tokens/build/scss/semantic-variables/scheme-variables' as scheme-variables;
@use '@vonage/vvd-typography/scss/typography' as typography;
@use '@vonage/vvd-foundation/scss/mixins/connotation/config' with (
	$connotations-set: primary cta,
	$default: cta,
);
@use '@vonage/vvd-foundation/scss/mixins/connotation' as connotation;
@use '@vonage/vwc-media-controller/src/partials/vwc-media-controller-variables' as media-controls-variables;

$disabled: var(--vvd-color-neutral-50);

:host {
	*:focus:not(:focus-visible) {
		outline: none;
	}

	:focus-visible {
		outline: var(#{scheme-variables.$vvd-color-on-canvas}) solid 2px;
	}

	.audio {
		@include connotation.connotation;
		@include typography.typography-cat-shorthand('caption');
		display: flex;
		flex-wrap: nowrap;
		align-items: center;
		justify-content: flex-start;

		> .scrubber {
			#{media-controls-variables.$vwc-media-controls-scrubber-color}: var(#{connotation.$vvd-color-connotation});
			min-width: 200px;
			flex: 1 0;
		}

		> .control-button {
			flex: 0 0 auto;
			border: 0;
			background-color: transparent;
			cursor: pointer;

			> .icon {
				color: inherit;
			}
		}

		&.disabled.connotation-cta,
		&.disabled:not(.connotation-cta) {
			> .scrubber {
				#{media-controls-variables.$vwc-media-controls-scrubber-color}: #{$disabled};

			}
			> .control-button {
				> .icon {
					--connotation: #{$disabled};
				}
			}
			> .playhead-position {
				color: var(#{scheme-variables.$vvd-color-neutral-40});
			}
		}

		> .playhead-position {

			overflow: hidden;
			width: 90px;
			box-sizing: border-box;
			justify-content: center;
			color: var(#{scheme-variables.$vvd-color-on-canvas});
			font-variant-numeric: tabular-nums;
			text-align: center;
			text-overflow: ellipsis;
			white-space: pre;
		}
	}
}
